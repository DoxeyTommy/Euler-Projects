package euler;

public class main {
	
	private static final int LIMIT = Library.pow(10, 9);
	
	public static void main(String[] args) {
		
		long sum = 0;
		for (int i = 1; i * i <= (LIMIT + 1) / 3; i += 2) 
		{
			for (int j = i - 2; j > 0; j -= 2) 
			{
				if (Library.gcd(i, j) == 1)
				{
					int a = i * j;
					int b = (i * i - j * j) / 2;
					int c = (i * i + j * j) / 2;
					if (a * 2 == c - 1) 
					{ 
						int p = c * 3 - 1; 
						if (p <= LIMIT) sum += p; 
					}
					if (a * 2 == c + 1) 
					{ 
						int p = c * 3 + 1; 
						if (p <= LIMIT) sum += p; 
					}
					if (b * 2 == c - 1) 
					{ 
						int p = c * 3 - 1; 
						if (p <= LIMIT) sum += p; 
					}
					if (b * 2 == c + 1) 
					{ 
						int p = c * 3 + 1; 
						if (p <= LIMIT) sum += p; 
					}
				}
			}
		}
		System.out.println(Long.toString(sum));
	}
		 
	//solution: 518408346

}
