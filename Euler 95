package euler;

import java.util.HashSet;
import java.util.Set;

public class main {
	
	private static final int LIMIT = Library.pow(10, 6);
	
	public static void main(String[] args) {
		
		int[] sum = new int[LIMIT + 1];
		for (int i = 1; i <= LIMIT; i++) 
			for (int j = i * 2; j <= LIMIT; j += i)
				sum[j] += i;
		
		int maxLen = 0;
		int minNum = -1;
		for (int i = 0; i <= LIMIT; i++) 
		{
			Set<Integer> seen = new HashSet<>();
			for (int count = 1, cur = i; ; count++) 
			{
				seen.add(cur);
				int next = sum[cur];
				if (next == i) 
				{
					if (count > maxLen) 
					{
						minNum = i;
						maxLen = count;
					}
					break;
				}
				else if (next > LIMIT || seen.contains(next))
					break;
				else
					cur = next;
			}
		}
		
		System.out.println(Integer.toString(minNum));
	}
		 
	//solution: 14316

}
